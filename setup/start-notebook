#!/bin/bash

# This start notebook file specific for the pysumma workshop. edit as you
# see fit for more general use

# Make sure we are on geyser
if [[ $HOSTNAME != *"geyser"* ]];
then
  echo "You need to execute this script on geyser. From cheyenne you can"
  echo "start an interactive session on geyser by typing: execgy"
  echo "Then rerun this script."
  exit ;
fi

# Make sure the pysumma environment is active. If not tell the user to start
# it first
if [[ $CONDA_DEFAULT_ENV != pysumma ]];
then
	echo "Activate the pysumma environment before running this script."
	echo "You can do so by typing:"
	echo ""
	echo "source activate pysumma"
	echo ""
	echo "on the command line. If this does not work, make sure that you run"
	echo "the ./setup_first_time.sh script first."
	exit ;
fi

# Switch to the notebook directory
if [[ -e ${HOME}/sopron_2018/notebooks ]];
then
	cd ${HOME}/sopron_2018/notebooks
fi

# Create trap to kill notebook when user is done
kill_server() {
	if [[ $JNPID != -1 ]]; then
    	echo -en "\nKilling Jupyter Notebook Server with PID=$JNPID ... "
		kill $JNPID
		echo "done"
		exit 0
	else
		exit 1
	fi
}

JNPID=-1
trap kill_server SIGHUP SIGINT SIGTERM

# get available port
DASK_PORT=8787
LOCALHOST_PORT=8888



# Begin server creation
JNHOST=$(hostname)
LOGDIR=/glade/scratch/${USER}/.jupyter-notebook
LOGFILE=${LOGDIR}/log.$(date +%Y%m%dT%H%M%S)
mkdir -p $LOGDIR

if [[ $JNHOST == ch* || $JNHOST == r* ]]; then
	STHOST=cheyenne
else
	STHOST=$JNHOST
fi

echo "Logging this session in $LOGFILE"

# Check if running on login nodes
if [[ $JNHOST == yslogin* ]]; then
cat << EOF

See "Use of login nodes" here before running Jupyter Notebook on this
node: https://www2.cisl.ucar.edu/resources/yellowstone/using_resources.

Consider running on Geyser instead by using execgy to start a session. (Run execgy -help.)
EOF
elif [[ $JNHOST == cheyenne* ]]; then
STHOST=$JNHOST
cat << EOF

See "Use of login nodes" here before running Jupyter Notebook on this
node: https://www2.cisl.ucar.edu/resources/computational-systems/cheyenne/running-jobs.

Consider running in an interactive job on geyser instead by using execgy. (Run exegy help.)
EOF
fi

jupyter notebook $@ --no-browser --ip=$JNHOST  >& $LOGFILE &
JNPID=$!

echo -en  "\nStarting jupyter notebook server, please wait ... "

ELAPSED=0
ADDRESS=

while [[ $ADDRESS != *"${JNHOST}"* ]]; do
    sleep 1
    ELAPSED=$(($ELAPSED+1))
		ADDRESS=$(grep -e '^\[.*\]\s*http://.*:.*/\?token=.*' $LOGFILE | head -n 1 | awk -F'//' '{print $NF}')

    if [[ $ELAPSED -gt 30 ]]; then
        echo -e "something went wrong\n---"
        cat $LOGFILE
        echo "---"

		kill_server
    fi
done


echo -e "done\n---\n"

HOST=$(echo $ADDRESS | awk -F':' ' { print $1 } ')
PORT=$(echo $ADDRESS | awk -F':' ' { print $2 } ' | awk -F'/' ' { print $1 } ')
TOKEN=$(echo $ADDRESS | awk -F'=' ' { print $NF } ')


cat << EOF
Run the following command on your desktop or laptop:

    ssh -N -l $USER -L ${LOCALHOST_PORT}:${JNHOST}:$PORT ${STHOST}.ucar.edu

Log in with your YubiKey/Cryptocard (there will be no prompt).
Then open a browser and go to http://localhost:${LOCALHOST_PORT}. The Jupyter web
interface will ask you for a token. Use the following:

	$TOKEN

Note that anyone to whom you give the token can access (and modify/delete)
files in your GLADE spaces, regardless of the file permissions you
have set. SHARE TOKENS RARELY AND WISELY!

To stop the server, press Ctrl-C.
EOF

# Wait for user kill command
sleep inf
